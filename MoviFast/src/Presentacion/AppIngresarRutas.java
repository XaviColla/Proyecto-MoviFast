/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

/**
 *
 * @author Christian Collaguazo
 */
import Calculos.CalculosRuta;
import Calculos.CalculoRutasaTomar;
import Datos.PuntosAViajar;
import Mapas.InstanceMapaNormal;
import Mapas.Mapa;
import Mapas.InstanceStreeView;
import Mapas.MapaMarcadores;
import Mapas.InstanceMapaSatelite;
import Mapas.FactoryMapa;
import Datos.Ubicacion;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
//import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
public class AppIngresarRutas extends javax.swing.JFrame{

    /**
     * Creates new form AppIngresarRutas
     */
    private Ubicacion ubicacion = new Ubicacion("Parque Calderon");
    private Ubicacion ubilugares = new Ubicacion("Parque Calderon");
    
    private FactoryMapa factoryMapa = new InstanceMapaNormal();
    private Mapa miUbicacion = factoryMapa.getIntacemapa(ubicacion);
    private Mapa lugares = factoryMapa.getIntacemapa(ubilugares);
    
    private MapaMarcadores marcadores = new MapaMarcadores(new Ubicacion("-2.899169,-79.004401"));
    
    private PuntosAViajar puntos= new PuntosAViajar();
    
    private double escalaMovimento = 0.0001;
    private int cambiarFondo = -1;
    DefaultListModel model = new DefaultListModel();
    public AppIngresarRutas() {
        
        initComponents();
        if(new File("Movifast_Arch\\fondo.obj").exists()){
            try {
                ObjectInputStream arch = new ObjectInputStream(new FileInputStream("Movifast_Arch\\fondo.obj"));
                Object[] args;
                args = (Object[]) arch.readObject();
                arch.close();
                this.cambiarFondo = (int) args[0];
                if(cambiarFondo == 1)
                {
                    Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo2.jpg"))); // NOI18N
                }
                else if (cambiarFondo == 0)
                {
                    Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.jpg"))); // NOI18N
                }
                
                
            } catch (IOException | ClassNotFoundException ex) {
                System.out.println("Algo paso");
                cambiarFondo = -1;}
        }
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        Icon imaconjun = new ImageIcon(miUbicacion.dibujarMapa()); 
        LabelUbicacion.setIcon(imaconjun);
        LabelLugares.setIcon(imaconjun);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TextMiubicacion = new javax.swing.JTextField();
        ingresarUbicacion = new javax.swing.JButton();
        StreeView_ubicacion = new javax.swing.JButton();
        Txtlugares = new javax.swing.JTextField();
        ingresarLugares = new javax.swing.JButton();
        streeView_lugares = new javax.swing.JButton();
        guardarDatos = new javax.swing.JButton();
        guardarPuntos = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaSalidas = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        Arriba1 = new javax.swing.JButton();
        Arriba2 = new javax.swing.JButton();
        abajo1 = new javax.swing.JButton();
        abajo2 = new javax.swing.JButton();
        derecha1 = new javax.swing.JButton();
        Derecha2 = new javax.swing.JButton();
        izquierda1 = new javax.swing.JButton();
        izquierda2 = new javax.swing.JButton();
        guadarUbicacion = new javax.swing.JButton();
        salite_ubicacion = new javax.swing.JButton();
        normal_puntos = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        Satelite_puntos = new javax.swing.JButton();
        normal_ubicacion = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        LabelUbicacion = new javax.swing.JLabel();
        LabelLugares = new javax.swing.JLabel();
        menos1 = new javax.swing.JToggleButton();
        Plus1 = new javax.swing.JToggleButton();
        Plus2 = new javax.swing.JToggleButton();
        menos2 = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        calcularRuta = new javax.swing.JButton();
        menordesplazamiento = new javax.swing.JButton();
        plussesplasamiento = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        CambiarFondo = new javax.swing.JButton();
        Regresar = new javax.swing.JButton();
        RecuperarDatos = new javax.swing.JButton();
        verPuntosMarcadores = new javax.swing.JButton();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(1250, 710));
        setPreferredSize(new java.awt.Dimension(1250, 710));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TextMiubicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextMiubicacionActionPerformed(evt);
            }
        });
        getContentPane().add(TextMiubicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 380, 44));

        ingresarUbicacion.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        ingresarUbicacion.setText("Ingrese el punto de Salida");
        ingresarUbicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarUbicacionActionPerformed(evt);
            }
        });
        getContentPane().add(ingresarUbicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 276, 30));

        StreeView_ubicacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        StreeView_ubicacion.setText("Ver");
        StreeView_ubicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StreeView_ubicacionActionPerformed(evt);
            }
        });
        getContentPane().add(StreeView_ubicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, 80, -1));
        getContentPane().add(Txtlugares, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 380, 44));

        ingresarLugares.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        ingresarLugares.setText("Ingrese los lugares a visitar");
        ingresarLugares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarLugaresActionPerformed(evt);
            }
        });
        getContentPane().add(ingresarLugares, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, 276, 30));

        streeView_lugares.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        streeView_lugares.setText("Ver");
        streeView_lugares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streeView_lugaresActionPerformed(evt);
            }
        });
        getContentPane().add(streeView_lugares, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 580, 80, -1));

        guardarDatos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        guardarDatos.setText("Guardar Puntos");
        guardarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarDatosActionPerformed(evt);
            }
        });
        getContentPane().add(guardarDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 640, 140, 30));

        guardarPuntos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        guardarPuntos.setText("Guardar");
        guardarPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarPuntosActionPerformed(evt);
            }
        });
        getContentPane().add(guardarPuntos, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 60, 100, 30));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane3.setInheritsPopupMenu(true);

        listaSalidas.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        listaSalidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaSalidasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listaSalidas);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 60, 320, 380));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Si quiere eliminar un lugar pulse sobre el.");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 40, 300, -1));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 0, 20, 610));

        Arriba1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Arriba1.setText("Arriba");
        Arriba1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Arriba1ActionPerformed(evt);
            }
        });
        getContentPane().add(Arriba1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 520, -1, -1));

        Arriba2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Arriba2.setText("Arriba");
        Arriba2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Arriba2ActionPerformed(evt);
            }
        });
        getContentPane().add(Arriba2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 520, -1, -1));

        abajo1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        abajo1.setText("Abajo");
        abajo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abajo1ActionPerformed(evt);
            }
        });
        getContentPane().add(abajo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 580, -1, -1));

        abajo2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        abajo2.setText("Abajo");
        abajo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abajo2ActionPerformed(evt);
            }
        });
        getContentPane().add(abajo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 580, -1, -1));

        derecha1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        derecha1.setText("Derecha");
        derecha1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derecha1ActionPerformed(evt);
            }
        });
        getContentPane().add(derecha1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 550, -1, -1));

        Derecha2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Derecha2.setText("Derecha");
        Derecha2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Derecha2ActionPerformed(evt);
            }
        });
        getContentPane().add(Derecha2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 550, -1, -1));

        izquierda1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        izquierda1.setText("Izquierda");
        izquierda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izquierda1ActionPerformed(evt);
            }
        });
        getContentPane().add(izquierda1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 550, -1, -1));

        izquierda2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        izquierda2.setText("Izquierda");
        izquierda2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izquierda2ActionPerformed(evt);
            }
        });
        getContentPane().add(izquierda2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 550, -1, -1));

        guadarUbicacion.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        guadarUbicacion.setText("Guardar");
        guadarUbicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guadarUbicacionActionPerformed(evt);
            }
        });
        getContentPane().add(guadarUbicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, 100, 30));

        salite_ubicacion.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        salite_ubicacion.setText("Satelite");
        salite_ubicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salite_ubicacionActionPerformed(evt);
            }
        });
        getContentPane().add(salite_ubicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, -1, -1));

        normal_puntos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        normal_puntos.setText("Normal");
        normal_puntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_puntosActionPerformed(evt);
            }
        });
        getContentPane().add(normal_puntos, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 550, 80, -1));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 20, 610));

        Satelite_puntos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Satelite_puntos.setText("Satelite");
        Satelite_puntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Satelite_puntosActionPerformed(evt);
            }
        });
        getContentPane().add(Satelite_puntos, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 520, -1, -1));

        normal_ubicacion.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        normal_ubicacion.setText("Normal");
        normal_ubicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_ubicacionActionPerformed(evt);
            }
        });
        getContentPane().add(normal_ubicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, 80, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 610, 1230, 10));
        getContentPane().add(LabelUbicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 430, 410));
        getContentPane().add(LabelLugares, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 430, 410));

        menos1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        menos1.setText("-");
        menos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menos1ActionPerformed(evt);
            }
        });
        getContentPane().add(menos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 560, 40, -1));

        Plus1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Plus1.setText("+");
        Plus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Plus1ActionPerformed(evt);
            }
        });
        getContentPane().add(Plus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 530, 40, -1));

        Plus2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Plus2.setText("+");
        Plus2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Plus2ActionPerformed(evt);
            }
        });
        getContentPane().add(Plus2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 530, 40, -1));

        menos2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        menos2.setText("-");
        menos2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menos2ActionPerformed(evt);
            }
        });
        getContentPane().add(menos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 560, 40, -1));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Aumentar longitud de desplasamiento");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 640, 270, -1));

        calcularRuta.setFont(new java.awt.Font("Century Gothic", 0, 21)); // NOI18N
        calcularRuta.setText("Calcular Ruta");
        calcularRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularRutaActionPerformed(evt);
            }
        });
        getContentPane().add(calcularRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 450, 240, 40));

        menordesplazamiento.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        menordesplazamiento.setText("-");
        menordesplazamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menordesplazamientoActionPerformed(evt);
            }
        });
        getContentPane().add(menordesplazamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 640, 70, -1));

        plussesplasamiento.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        plussesplasamiento.setText("+");
        plussesplasamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plussesplasamientoActionPerformed(evt);
            }
        });
        getContentPane().add(plussesplasamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 640, 70, -1));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Lista de lugares Ingresados");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, 200, -1));

        CambiarFondo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        CambiarFondo.setText("Fondo");
        CambiarFondo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambiarFondoActionPerformed(evt);
            }
        });
        getContentPane().add(CambiarFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 640, -1, -1));

        Regresar.setFont(new java.awt.Font("Century Gothic", 0, 21)); // NOI18N
        Regresar.setText("Regresar");
        Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarActionPerformed(evt);
            }
        });
        getContentPane().add(Regresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 500, 240, 40));

        RecuperarDatos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        RecuperarDatos.setText("Recuperar Puntos");
        RecuperarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecuperarDatosActionPerformed(evt);
            }
        });
        getContentPane().add(RecuperarDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 640, -1, 30));

        verPuntosMarcadores.setFont(new java.awt.Font("Century Gothic", 0, 21)); // NOI18N
        verPuntosMarcadores.setText("Ver Lista de Lugares");
        verPuntosMarcadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verPuntosMarcadoresActionPerformed(evt);
            }
        });
        getContentPane().add(verPuntosMarcadores, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 550, 240, 40));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.jpg"))); // NOI18N
        Fondo.setText("jLabel3");
        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextMiubicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextMiubicacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextMiubicacionActionPerformed

    private void ingresarUbicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarUbicacionActionPerformed
        // TODO add your handling code here:
        ubicacion = new Ubicacion(TextMiubicacion.getText());
        miUbicacion = factoryMapa.getIntacemapa(ubicacion);
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
    }//GEN-LAST:event_ingresarUbicacionActionPerformed

    private void Arriba1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Arriba1ActionPerformed
        miUbicacion.setMoverArr();
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
        
    }//GEN-LAST:event_Arriba1ActionPerformed

    private void derecha1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derecha1ActionPerformed
        miUbicacion.setMoverDe();
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
    }//GEN-LAST:event_derecha1ActionPerformed

    private void abajo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abajo1ActionPerformed
        miUbicacion.setMoverAba();
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
    }//GEN-LAST:event_abajo1ActionPerformed

    private void izquierda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izquierda1ActionPerformed
        miUbicacion.setMoverIz();
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
    }//GEN-LAST:event_izquierda1ActionPerformed

    private void guadarUbicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guadarUbicacionActionPerformed
        // TODO add your handling code here:
        boolean estaRepatido = false;
        String ubica = null;
        for (Ubicacion i : puntos.getUbicaciones()) {
            ubica = i.UbicacionLa_Lo();
            if(ubica.equals(miUbicacion.getUbicacion().UbicacionLa_Lo())){
                JOptionPane.showMessageDialog(null, "Usted ya ingreso este lugar" , "Error", JOptionPane.WARNING_MESSAGE);
                estaRepatido = true;
            }
        }
        if(!estaRepatido){
            puntos.modificarMiUbicacion(miUbicacion.getUbicacion()); 
            model.clear();
            int cont = 0;
            for(Ubicacion i : puntos.getUbicaciones())
            {
                cont++;
                if(cont == 1){
                    model.addElement("Ubicacion actual agregada: " + i.getLugar());
                }
                else{
                    model.addElement("Punto a viajar agregador: " + i.getLugar());
                }  
            }
            //model.addElement("Ubicacion Actual:" + puntos.getMiUbicacion().getLugar());
            listaSalidas.setModel(model);
        }
    }//GEN-LAST:event_guadarUbicacionActionPerformed

    private void Satelite_puntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Satelite_puntosActionPerformed
        // TODO add your handling code here:
        factoryMapa = new InstanceMapaSatelite();
        lugares = factoryMapa.getIntacemapa(ubilugares);
        lugares.setEscalamovimiento(escalaMovimento);
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
    }//GEN-LAST:event_Satelite_puntosActionPerformed

    private void salite_ubicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salite_ubicacionActionPerformed
        // TODO add your handling code here:
        factoryMapa = new InstanceMapaSatelite();
        miUbicacion = factoryMapa.getIntacemapa(ubicacion);
        miUbicacion.setEscalamovimiento(escalaMovimento);
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
        
    }//GEN-LAST:event_salite_ubicacionActionPerformed

    private void Arriba2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Arriba2ActionPerformed
        // TODO add your handling code here:
        lugares.setMoverArr();
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
    }//GEN-LAST:event_Arriba2ActionPerformed

    private void izquierda2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izquierda2ActionPerformed
        // TODO add your handling code here:
        lugares.setMoverIz();
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
    }//GEN-LAST:event_izquierda2ActionPerformed

    private void Derecha2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Derecha2ActionPerformed
        // TODO add your handling code here:
        lugares.setMoverDe();
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
    }//GEN-LAST:event_Derecha2ActionPerformed

    private void menos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menos1ActionPerformed
        // TODO add your handling code here:
        miUbicacion.alejarMapa();
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
    }//GEN-LAST:event_menos1ActionPerformed

    private void Plus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Plus1ActionPerformed

        miUbicacion.acercarMapa();
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
        
    }//GEN-LAST:event_Plus1ActionPerformed

    private void Plus2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Plus2ActionPerformed
        // TODO add your handling code here:
        lugares.acercarMapa();
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
        
    }//GEN-LAST:event_Plus2ActionPerformed

    private void menos2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menos2ActionPerformed
        // TODO add your handling code here:
        lugares.alejarMapa();
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
    }//GEN-LAST:event_menos2ActionPerformed

    private void normal_ubicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_ubicacionActionPerformed
        // TODO add your handling code here:
        factoryMapa = new InstanceMapaNormal();
        miUbicacion = factoryMapa.getIntacemapa(ubicacion);
        miUbicacion.setEscalamovimiento(escalaMovimento);
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
    }//GEN-LAST:event_normal_ubicacionActionPerformed

    private void normal_puntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_puntosActionPerformed
        // TODO add your handling code here:
        factoryMapa = new InstanceMapaNormal();
        lugares = factoryMapa.getIntacemapa(ubilugares);
        lugares.setEscalamovimiento(escalaMovimento);
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
    }//GEN-LAST:event_normal_puntosActionPerformed

    private void StreeView_ubicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StreeView_ubicacionActionPerformed
        // TODO add your handling code here:
        factoryMapa = new InstanceStreeView();
        miUbicacion = factoryMapa.getIntacemapa(ubicacion);
        LabelUbicacion.setIcon(new ImageIcon(miUbicacion.dibujarMapa()));
    }//GEN-LAST:event_StreeView_ubicacionActionPerformed

    private void streeView_lugaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streeView_lugaresActionPerformed
        // TODO add your handling code here:
        factoryMapa = new InstanceStreeView();
        lugares = factoryMapa.getIntacemapa(ubilugares);
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
    }//GEN-LAST:event_streeView_lugaresActionPerformed

    private void abajo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abajo2ActionPerformed
        // TODO add your handling code here:
        lugares.setMoverAba();
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
    }//GEN-LAST:event_abajo2ActionPerformed

    private void ingresarLugaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarLugaresActionPerformed
        // TODO add your handling code here:
        ubilugares = new Ubicacion(Txtlugares.getText());
        lugares = factoryMapa.getIntacemapa(ubilugares);
        LabelLugares.setIcon(new ImageIcon(lugares.dibujarMapa()));
    }//GEN-LAST:event_ingresarLugaresActionPerformed

    private void guardarPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarPuntosActionPerformed
        // TODO add your handling code here:
        boolean estaRepatido = false;
        String ubica = null;
        for (Ubicacion i : puntos.getUbicaciones()) {
            ubica = i.UbicacionLa_Lo();
            if(ubica.equals(lugares.getUbicacion().UbicacionLa_Lo())){
                JOptionPane.showMessageDialog(null, "Usted ya ingreso este lugar" , "Error", JOptionPane.WARNING_MESSAGE);
                estaRepatido = true;
            }
        }
        if(!estaRepatido){
            puntos.getUbicaciones().add(lugares.getUbicacion());//setMiUbicacion(Miubicacion.getUbicacion());
            model.clear();
            int cont = 0;
            for(Ubicacion i : puntos.getUbicaciones())
            {
                cont++;
                if(cont == 1 && puntos.getMiUbicacion() != null){
                    model.addElement("Ubicacion actual agregada: " + i.getLugar());
                }
                else{
                    model.addElement("Punto a viajar agregador: " + i.getLugar());
                }    

            }
            listaSalidas.setModel(model);
        }
    }//GEN-LAST:event_guardarPuntosActionPerformed

    private void listaSalidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaSalidasMouseClicked
        // TODO add your handling code here:
    //
 try {
        int resp = JOptionPane.showConfirmDialog(null, "¿Esta seguro que quiere eliminar esta ubicacion?", "Eliminar", JOptionPane.YES_NO_OPTION);
        if(resp == 0)
        {
            int pos = this.listaSalidas.getSelectedIndex();
            puntos.getUbicaciones().remove(pos);
            if(this.listaSalidas.getSelectedIndex() == 0)
            {
                puntos.modificarMiUbicacion(null);
            }
            model.clear();
            int cont = 0;
            for(Ubicacion i : puntos.getUbicaciones())
            {
                cont++;
                if(cont == 1 && pos != 0){
                    model.addElement("Ubicacion actual agregada: " + i.getLugar());
                }
                else{
                    model.addElement("Punto a viajar agregador: " + i.getLugar());
                }
                

            }
            listaSalidas.setModel(model);
        }
            
        //System.out.println(resp);
             //System.out.println();
            //Obtener el nombre de la tabla que fue seleccionado
            
           
            
        } catch (Exception ex) {}    
        
    }//GEN-LAST:event_listaSalidasMouseClicked

    private void calcularRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularRutaActionPerformed
        // TODO add your handling code here:
        if(puntos.getMiUbicacion() == null)
        {
            JOptionPane.showMessageDialog(null, "Usted no a ingresado su ubicacion actual" , "Error", JOptionPane.WARNING_MESSAGE);
        }else if(puntos.getUbicaciones().size() == 1)
        {
            JOptionPane.showMessageDialog(null, "Usted no a ingresado ningun punto a viajar" , "Error", JOptionPane.WARNING_MESSAGE);
        }
        else
        {   
            CalculosRuta calculo = new CalculoRutasaTomar(puntos);
            calculo.realizarCalculos();
            AppMostrarRutas appMostrar = new AppMostrarRutas(calculo);
            appMostrar.setVisible(true);
             
            
        }
    }//GEN-LAST:event_calcularRutaActionPerformed

    private void menordesplazamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menordesplazamientoActionPerformed
        // TODO add your handling code here:
         escalaMovimento-= 0.0003;
        escalaMovimento = (escalaMovimento < 0.0000) ? 0.0000 : escalaMovimento ;
        miUbicacion.setEscalamovimiento(escalaMovimento);
        lugares.setEscalamovimiento(escalaMovimento);
    }//GEN-LAST:event_menordesplazamientoActionPerformed

    private void plussesplasamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plussesplasamientoActionPerformed
        // TODO add your handling code here:
        escalaMovimento += 0.0003;
        miUbicacion.setEscalamovimiento(escalaMovimento);
        lugares.setEscalamovimiento(escalaMovimento);
    }//GEN-LAST:event_plussesplasamientoActionPerformed

    private void CambiarFondoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambiarFondoActionPerformed
        // TODO add your handling code here:
        if(cambiarFondo == 0 || cambiarFondo == -1)
        {
            Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo2.jpg"))); // NOI18N
            cambiarFondo = 1;
        }
        else if (cambiarFondo == 1)
        {
            Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.jpg"))); // NOI18N
            cambiarFondo = 0;
        }
        try {
            
            ObjectOutputStream arch = new ObjectOutputStream(new FileOutputStream("Movifast_Arch\\fondo.obj"));
            Object[] arg = {cambiarFondo};
            arch.writeObject(arg);
            arch.close();
        } 
        catch (IOException ex) {} 
    }//GEN-LAST:event_CambiarFondoActionPerformed

    private void guardarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarDatosActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Se guardaron los datos correctamente");
        if(new File("Movifast_Arch\\puntosguardados.txt").exists())
        {
            try{
                FileWriter cordenadas = new FileWriter("Movifast_Arch\\puntosguardados.txt");
                FileWriter ubicaciones = new FileWriter("Movifast_Arch\\ubicacionesguardadas.txt");
                FileWriter validaciones = new FileWriter("Movifast_Arch\\validacionesapp.txt");
                
                BufferedWriter bw1 = new BufferedWriter(cordenadas);
                BufferedWriter bw2 = new BufferedWriter(ubicaciones);
                BufferedWriter bw3 = new BufferedWriter(validaciones);
                bw1.write("");
                bw2.write("");
                bw3.write("");
                bw1.close();
                bw2.close();
                bw3.close();
                ubicaciones.close();
                cordenadas.close();
                validaciones.close();
            }catch(Exception e)
            {
                
            }
            
        }
        try {
            
            FileWriter cordenadas = new FileWriter("Movifast_Arch\\puntosguardados.txt");
            FileWriter ubicaciones = new FileWriter("Movifast_Arch\\ubicacionesguardadas.txt");
            FileWriter validaciones = new FileWriter("Movifast_Arch\\validacionesapp.txt");
            for(Ubicacion ubi : puntos.getUbicaciones())
            {
                cordenadas.write(ubi.UbicacionLa_Lo() + " | ");
                ubicaciones.write(ubi.getLugar() + " | ");
                
            }
            if(puntos.getMiUbicacion() == null)
            {
                validaciones.write("no");
            }
            else
            {
                validaciones.write("si");
            }
            //puntos.getUbicaciones().add(lugares.getUbicacion());//setMiUbicacion(Miubicacion.getUbicacion());
            
            ubicaciones.close();
            cordenadas.close();
            validaciones.close();
            
        } 
        catch (IOException ex) {
            System.out.println("Error al guardar");}
    }//GEN-LAST:event_guardarDatosActionPerformed

    private void RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarActionPerformed
        // TODO add your handling code here:
        AppMain main = new AppMain();
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_RegresarActionPerformed

    private void RecuperarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecuperarDatosActionPerformed
        // TODO add your handling code here:
        File archivo = new File("Movifast_Arch\\puntosguardados.txt");
        if((archivo).exists()){
            try {
                FileReader cordenadas = new FileReader("Movifast_Arch\\puntosguardados.txt");
                FileReader ubicaciones = new FileReader("Movifast_Arch\\ubicacionesguardadas.txt");
                FileReader validaciones = new FileReader("Movifast_Arch\\validacionesapp.txt");
                BufferedReader db1 = new BufferedReader(cordenadas);
                BufferedReader db2 = new BufferedReader(ubicaciones);
                BufferedReader db3 = new BufferedReader(validaciones);
                String corde = db1.readLine().trim();
                String nombrelugar = db2.readLine().trim();
                String ubivalidacion = db3.readLine().trim();
                puntos = new PuntosAViajar();
                Ubicacion aux = null;
                int j = 0;
                for (int i = 0; i < corde.length()-1; i++) {
                    int index = corde.indexOf("|", i);
                    String cordenadasaux = corde.substring(i, index).trim();
                    i = index;
                    aux = new Ubicacion(cordenadasaux);
                    index = nombrelugar.indexOf("|", j);
                    String nombreLugaraux = nombrelugar.substring(j, index).trim();
                    aux.setLugar2(nombreLugaraux);
                    j = index+1;
                    
                    puntos.getUbicaciones().add(aux);
                }

                if(ubivalidacion.equals("si"))
                {
                    puntos.setMiUbicacion(puntos.getUbicaciones().get(0));
                }
                else if(ubivalidacion.equals("no"))
                {
                    puntos.setMiUbicacion(null);
                }

                model.clear();
                int cont = 0;
                for(Ubicacion i : puntos.getUbicaciones())
                {
                    cont++;
                    if(cont == 1 && puntos.getMiUbicacion() != null){
                        model.addElement("Ubicacion actual agregada: " + i.getLugar());
                    }
                    else{
                        model.addElement("Punto a viajar agregador: " + i.getLugar());
                    }    

                }
                listaSalidas.setModel(model);
                
                cordenadas.close();
                ubicaciones.close();
                validaciones.close();
                } catch (Exception e) {
                    System.out.println("Algo paso");}
            } 
    }//GEN-LAST:event_RecuperarDatosActionPerformed

    private void verPuntosMarcadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verPuntosMarcadoresActionPerformed
        // TODO add your handling code here:
        int cont = 0;
        int aux = 2;
        marcadores.setMarcadores("");
        for(Ubicacion ubi : puntos.getUbicaciones())
        {
            if(puntos.getMiUbicacion() != null && cont == 0)
            {
                marcadores.crearMarcadordores(1 , puntos.getUbicaciones().get(cont).UbicacionLa_Lo(),aux); 
            }
            else
            {
                marcadores.crearMarcadordores(0, puntos.getUbicaciones().get(cont).UbicacionLa_Lo(),aux);
                aux++;
            }
            
            cont++;
        }
        if(cont == 0){
            JOptionPane.showMessageDialog(null, "Usted no a ingresado ningun punto a viajar" , "Error", JOptionPane.WARNING_MESSAGE);
        }   
        else
        {
            //System.out.println(marcadores.getMarcadores());
            AppMapaMarcadores marcadores  = new AppMapaMarcadores(this.marcadores , this);
            this.setVisible(false);
            marcadores.setVisible(true);
        }
            
    }//GEN-LAST:event_verPuntosMarcadoresActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Arriba1;
    private javax.swing.JButton Arriba2;
    private javax.swing.JButton CambiarFondo;
    private javax.swing.JButton Derecha2;
    private javax.swing.JLabel Fondo;
    private javax.swing.JLabel LabelLugares;
    private javax.swing.JLabel LabelUbicacion;
    private javax.swing.JToggleButton Plus1;
    private javax.swing.JToggleButton Plus2;
    private javax.swing.JButton RecuperarDatos;
    private javax.swing.JButton Regresar;
    private javax.swing.JButton Satelite_puntos;
    private javax.swing.JButton StreeView_ubicacion;
    private javax.swing.JTextField TextMiubicacion;
    private javax.swing.JTextField Txtlugares;
    private javax.swing.JButton abajo1;
    private javax.swing.JButton abajo2;
    private javax.swing.JButton calcularRuta;
    private javax.swing.JButton derecha1;
    private javax.swing.JButton guadarUbicacion;
    private javax.swing.JButton guardarDatos;
    private javax.swing.JButton guardarPuntos;
    private javax.swing.JButton ingresarLugares;
    private javax.swing.JButton ingresarUbicacion;
    private javax.swing.JButton izquierda1;
    private javax.swing.JButton izquierda2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JList<String> listaSalidas;
    private javax.swing.JButton menordesplazamiento;
    private javax.swing.JToggleButton menos1;
    private javax.swing.JToggleButton menos2;
    private javax.swing.JButton normal_puntos;
    private javax.swing.JButton normal_ubicacion;
    private javax.swing.JButton plussesplasamiento;
    private javax.swing.JButton salite_ubicacion;
    private javax.swing.JButton streeView_lugares;
    private javax.swing.JButton verPuntosMarcadores;
    // End of variables declaration//GEN-END:variables
}
